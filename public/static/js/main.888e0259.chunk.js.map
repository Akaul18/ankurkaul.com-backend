{
    "version": 3,
    "sources": [
        "components/SideDrawer/DrawerButton.js",
        "components/SideDrawer/SideDrawer.js",
        "components/Header/index.js",
        "components/Header/Header.js",
        "config/apiConfig.js",
        "services/api.js",
        "components/HireMe/index.js",
        "components/HireMe/HireMe.js",
        "components/Home/Home.js",
        "components/Home/index.js",
        "components/Projects/ProjectCard/ProjectCards.js",
        "components/Projects/ProjectHeading/ProjectHeadings.js",
        "components/Projects/index.js",
        "components/Projects/Projects.js",
        "components/Skills/Skills.js",
        "components/Skills/index.js",
        "components/Backdrop/index.js",
        "components/Backdrop/Backdrop.js",
        "components/Thankyou/index.js",
        "components/Thankyou/Thankyou.js",
        "components/Form/Form.js",
        "components/Form/index.js",
        "components/Contact/index.js",
        "components/Contact/Contact.js",
        "App.js",
        "serviceWorker.js",
        "index.js"
    ],
    "names": [
        "DrawerButton",
        "drawerToggleHandler",
        "className",
        "onClick",
        "SideDrawer",
        "showDrawer",
        "closeDrawer",
        "drawerClasses",
        "to",
        "spy",
        "smooth",
        "offset",
        "duration",
        "delay",
        "Header",
        "src",
        "alt",
        "BASE_URL",
        "getProjects",
        "a",
        "axios",
        "get",
        "response",
        "data",
        "projects",
        "getSkills",
        "skills",
        "sendEmail",
        "state",
        "post",
        "message",
        "sendInquiry",
        "position",
        "workType",
        "email",
        "description",
        "HireMe",
        "open",
        "handleClose",
        "useState",
        "setWorkType",
        "setPosition",
        "setEmail",
        "setDescription",
        "sendButton",
        "Button",
        "variant",
        "disabled",
        "validator",
        "validate",
        "then",
        "res",
        "status",
        "alert",
        "catch",
        "err",
        "color",
        "Dialog",
        "onClose",
        "aria-labelledby",
        "DialogTitle",
        "id",
        "DialogContent",
        "DialogContentText",
        "InputLabel",
        "style",
        "Select",
        "value",
        "onChange",
        "e",
        "target",
        "label",
        "MenuItem",
        "labelId",
        "TextField",
        "margin",
        "type",
        "fullWidth",
        "width",
        "marginTop",
        "multiline",
        "rows",
        "placeholder",
        "DialogActions",
        "useStyles",
        "makeStyles",
        "theme",
        "spacing",
        "Home",
        "openDialog",
        "setOpenDialog",
        "React",
        "useEffect",
        "classes",
        "left",
        "top",
        "transitionTime",
        "size",
        "ProjectCards",
        "filterProjects",
        "setFilterProjects",
        "filter",
        "project",
        "keyword",
        "includes",
        "map",
        "key",
        "imgTitleDesktop",
        "title",
        "shortDesc",
        "href",
        "github",
        "taget",
        "website",
        "rel",
        "ProjectHeadings",
        "projChange",
        "document",
        "getElementById",
        "transform",
        "handleLiClick",
        "parentNode",
        "childNodes",
        "forEach",
        "li",
        "classList",
        "remove",
        "add",
        "textContent",
        "Projects",
        "loading",
        "setLoading",
        "setProjects",
        "handleProjectChange",
        "setHandleProjectChange",
        "console",
        "log",
        "input",
        "toLowerCase",
        "Skills",
        "memo",
        "skillsTypes",
        "setSkillsType",
        "loadAnimation",
        "setLoadAnimation",
        "boxParentHead",
        "animateSkills",
        "children",
        "bounding",
        "getBoundingClientRect",
        "bottom",
        "setTimeout",
        "getElementsByClassName",
        "addEventListener",
        "removeEventListener",
        "count",
        "types",
        "skill_type",
        "skill",
        "skill_name",
        "widthInc",
        "keyframes",
        "Div",
        "styled",
        "div",
        "Span",
        "span",
        "getWidth",
        "skill_proficiency",
        "Backdrop",
        "props",
        "click",
        "Thankyou",
        "handleThankyou",
        "Form",
        "handleChange",
        "submitForm",
        "inputProps",
        "autoFocus",
        "Contact",
        "isLoading",
        "setIsLoading",
        "showThankyou",
        "setShowThankyou",
        "name",
        "company",
        "contactNumber",
        "setState",
        "preventDefault",
        "validatedEmail",
        "App",
        "backdrop",
        "drawerOpen",
        "setDrawerOpen",
        "crossPressed",
        "setCrossPressed",
        "height",
        "prev",
        "Boolean",
        "window",
        "location",
        "hostname",
        "match",
        "ReactDOM",
        "render",
        "StrictMode",
        "navigator",
        "serviceWorker",
        "ready",
        "registration",
        "unregister",
        "error"
    ],
    "mappings": "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",
    "file": "static/js/main.888e0259.chunk.js",
    "sourcesContent": [
        "import React from 'react'\nimport './DrawerButton.scss'\n// import { DrawerButtonContext } from '../../App';\n\nconst DrawerButton = ({ drawerToggleHandler }) => {\n    // const drawerButtonContext = useContext(DrawerButtonContext)\n    // const drawerToggleHandler = drawerButtonContext.drawerToggleHandler\n    return (\n\n        <button className=\"toggle-button\" onClick={drawerToggleHandler}>\n            <div className=\"toggle-button__line\"></div>\n            <div className=\"toggle-button__line\"></div>\n            <div className=\"toggle-button__line\"></div>\n        </button >\n    )\n}\n\nexport default DrawerButton\n",
        "import React from 'react'\nimport './SideDrawer.scss'\n// import { Link } from 'react-router-dom'\nimport { Link } from 'react-scroll'\n\nconst SideDrawer = ({ showDrawer, closeDrawer }) => {\n    let drawerClasses = 'side-drawer';\n\n    if (showDrawer) {\n        drawerClasses = 'side-drawer open-drawer'\n    }\n\n    return (\n        <nav className={drawerClasses}>\n            <div className=\"cross-button\" onClick={closeDrawer}>\n                <div className=\"cross-button__line\"></div>\n                <div className=\"cross-button__line\"></div>\n                <div className=\"cross-button__line\"></div>\n            </div>\n            {/* <hr width=\"80%\" /> */}\n            <ul>\n                {/* <li onClick={closeDrawer}><Link to=\"/\"><strong>HOME</strong></Link></li>\n                <li onClick={closeDrawer}><Link to=\"/skills\"><strong>SKILLS</strong></Link></li>\n                <li onClick={closeDrawer}><Link to=\"/projects\"><strong>PROJECTS</strong></Link></li>\n                <li onClick={closeDrawer}><Link to=\"/blog\"><strong>BLOG</strong></Link></li>\n                <li onClick={closeDrawer}><Link to=\"/contact\"><strong>CONTACT</strong></Link></li> */}\n                <li><Link onClick={closeDrawer} to=\"Home\" spy={true} smooth={true} offset={-50} duration={1000} delay={100}><strong>HOME</strong></Link></li>\n                <li><Link to=\"Skills\" onClick={closeDrawer} spy={true} smooth={true} offset={-50} duration={1000} delay={100}><strong>SKILLS</strong></Link></li>\n                <li><Link to=\"Projects\" onClick={closeDrawer} spy={true} smooth={true} offset={-75} duration={1000} delay={100}><strong>PROJECTS</strong></Link></li>\n                {/* <li><Link to=\"/blog\" onClick={closeDrawer} spy={true} smooth={true} offset={-50} duration={500} delay={100}><strong>BLOG</strong></Link></li> */}\n                <li><Link to=\"Contact\" onClick={closeDrawer} spy={true} smooth={true} offset={370} duration={1000} delay={100}><strong>CONTACT</strong></Link></li>\n            </ul>\n        </nav>\n    );\n}\nexport default SideDrawer\n",
        "import Header from './Header'\n\nexport default Header",
        "import React from 'react'\nimport './Header.scss'\nimport { DrawerButton } from '../SideDrawer';\n// import { Link } from 'react-router-dom'\nimport { Link } from 'react-scroll'\n\n// const Header = ({ drawerToggleHandler, currentURLPath }) => {\nconst Header = ({ drawerToggleHandler }) => {\n\n    return (\n        <header className=\"header\">\n            <nav className=\"header__navigation\">\n                <div className=\"header__menu-icon\">\n                    <DrawerButton drawerToggleHandler={drawerToggleHandler} />\n                </div>\n                {/* <div className=\"header__logo\"><Link to=\"/\"><strong>My Logo</strong></Link></div> */}\n                <div className=\"header__logo\">\n                    {/* <Link to=\"/\"> */}\n                    <Link to=\"Home\" spy={true} smooth={true} offset={-50} duration={500} delay={100}>\n                        <img src=\"/assets/images/logo.png\" alt=\"logo\" />\n                    </Link>\n                </div>\n                <div className=\"spacer\"></div>\n                <div className=\"header__nav-items\">\n                    <ul>\n                        <li><Link to=\"Home\" spy={true} smooth={true} offset={-50} duration={700} delay={100}><strong>HOME</strong></Link></li>\n                        <li><Link to=\"Skills\" spy={true} smooth={true} offset={-50} duration={700} delay={100} ><strong>SKILLS</strong></Link></li>\n                        <li><Link to=\"Projects\" spy={true} smooth={true} offset={-75} duration={700} delay={100} ><strong>PROJECTS</strong></Link></li>\n                        {/* <li><Link to=\"/blog\" ><strong>BLOG</strong></Link></li> */}\n                        <li><Link to=\"Contact\" spy={true} smooth={true} offset={50} duration={700} delay={100} ><strong>CONTACT</strong></Link></li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    )\n}\n\n// const styles = {\n//     active: {\n//         color: '#f50057'\n//     },\n//     notActive: {\n//         color: '#fff'\n//     }\n// }\n\nexport default Header",
        "// export const BASE_URL = 'http://10.0.0.166:5000/api'\nexport const BASE_URL = 'http://operator.ankurkaul.com/api/api'",
        "import axios from 'axios'\nimport { BASE_URL } from '../config/apiConfig';\nexport const getProjects = async () => {\n    try {\n        const response = await axios.get(`${BASE_URL}/projects`)\n        const projects = await response.data\n        return projects\n    } catch (e) {\n        throw e\n    }\n}\n\nexport const getSkills = async () => {\n    try {\n        const response = await axios.get(`${BASE_URL}/skills`)\n        const skills = await response.data\n        return skills\n    } catch (e) {\n        throw e\n    }\n}\n\nexport const sendEmail = async (state) => {\n    try {\n        const response = await axios.post(`${BASE_URL}/contact`, state)\n        return response\n    } catch (e) {\n        return e.message\n    }\n}\n\nexport const sendInquiry = async (position, workType, email, description) => {\n    try {\n        const response = await axios.post(`${BASE_URL}/hireme`, {\n            position, workType, email, description\n        })\n        return response\n    } catch (e) {\n        return e.message\n    }\n}",
        "import HireMe from './HireMe'\n\nexport default HireMe",
        "import React, { useState } from 'react'\nimport './HireMe.scss'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { sendInquiry } from '../../services/api'\nimport validator from 'email-validator'\n\nconst HireMe = ({ open, handleClose }) => {\n    const [workType, setWorkType] = useState('');\n    const [position, setPosition] = useState('');\n    const [email, setEmail] = useState('');\n    const [description, setDescription] = useState('');\n\n    const close = () => {\n        setPosition('')\n        setWorkType('')\n        setEmail('')\n        setDescription('')\n        handleClose()\n    }\n\n    const handleTypePositionChange = e => {\n        setPosition(e.target.value)\n    }\n\n    const handleTypeWorkChange = e => {\n        setWorkType(e.target.value)\n    }\n\n    const handleEmailChange = e => {\n        setEmail(e.target.value)\n    }\n\n    const handleDescriptionChange = e => {\n        setDescription(e.target.value)\n    }\n\n\n    const send = () => {\n        const validatedEmail = validator.validate(email)\n        if (!validatedEmail) {\n            alert('Email entered is not valid')\n        } else {\n            sendInquiry(position, workType, email, description)\n                .then(res => {\n                    if (res.status === 200) {\n                        alert(\"Inquiry sent successfully. \\nI'll get back to you as soon as I can\")\n                        setPosition('')\n                        setWorkType('')\n                        setEmail('')\n                        setDescription('')\n                        handleClose()\n                    }\n                })\n                .catch(err => {\n                    alert(\"Error while sending message. Please try again after sometime\")\n                    handleClose()\n                })\n        }\n    }\n\n    let sendButton = '';\n    if (workType === '' || description === '' || email === '' || position === '') {\n        sendButton = <Button variant=\"outlined\" disabled>\n            <strong>Send inquiry</strong>\n        </Button>\n    } else {\n        sendButton = <Button onClick={send} color=\"primary\">\n            <strong>Send inquiry</strong>\n        </Button>\n    }\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Want to hire me? Send me an inquiry</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Please provide a brief description of your work opportunity and I'll get back to you as soon as I can.\n                </DialogContentText>\n                <div className=\"work-position\">\n                    <div>\n                        <InputLabel className=\"type-of-position-label\">\n                            Position to hire<span style={{ color: 'red' }}>*</span>\n                        </InputLabel>\n                        <Select\n                            className=\"type-of-position\"\n                            value={position}\n                            onChange={handleTypePositionChange}\n                            label=\"Type of work\"\n                        >\n                            <MenuItem value=\"frontend\">Frontend developer</MenuItem>\n                            <MenuItem value=\"backend\">Backend developer</MenuItem>\n                            <MenuItem value=\"fullstack\">Full stack</MenuItem>\n                        </Select>\n                    </div>\n                    <div>\n                        <InputLabel\n                            className=\"type-of-work-label\"\n                            id=\"demo-simple-select-outlined-label\">\n                            Type of work<span style={{ color: 'red' }}>*</span>\n                        </InputLabel>\n                        <Select\n                            className=\"type-of-work\"\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={workType}\n                            onChange={handleTypeWorkChange}\n                            label=\"Type of work\"\n                        >\n                            <MenuItem value=\"full\">Full time</MenuItem>\n                            <MenuItem value=\"hourly\">Hourly rate</MenuItem>\n                            <MenuItem value=\"fixed\">Fixed rate</MenuItem>\n                        </Select>\n                    </div>\n                </div>\n                <div className=\"email\">\n                    <TextField\n                        className=\"email__input\"\n                        margin=\"dense\"\n                        id=\"email\"\n                        value={email}\n                        label=\"Email Address\"\n                        type=\"email\"\n                        onChange={handleEmailChange}\n                        fullWidth\n                    />\n                </div>\n                <TextField\n                    className=\"descLabel\"\n                    style={{ width: '100%', marginTop: '0.5rem' }}\n                    id=\"outlined-multiline-static\"\n                    label=\"Description\"\n                    multiline\n                    rows={4}\n                    value={description}\n                    placeholder=\"Enter a brief description\"\n                    variant=\"outlined\"\n                    onChange={handleDescriptionChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={close} color=\"primary\">\n                    <strong>Cancel</strong>\n                </Button>\n                {sendButton}\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nexport default HireMe\n",
        "import React, { useState } from 'react'\nimport './Home.scss'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport HireMe from '../HireMe'\n// import { Link } from 'react-router-dom'\nimport { Link } from 'react-scroll'\nimport LightSpeed from 'react-reveal/LightSpeed'\nimport Fade from 'react-reveal/Fade'\nimport Zoom from 'react-reveal/Zoom'\nimport SmoothImage from 'react-smooth-image'\n\nconst useStyles = makeStyles(theme => ({\n    margin: {\n        margin: theme.spacing(1),\n    }\n}))\n\n\n// const Home = ({ handleActiveLink }) => {\nconst Home = () => {\n\n    const [openDialog, setOpenDialog] = useState(false);\n    React.useEffect(() => {\n        // handleActiveLink(window.location.pathname)\n        // const h1Ref = document.getElementById('h1Ref')\n        // const h3Ref = document.getElementById('h3Ref')\n        // const pRef = document.getElementById('pRef')\n\n        // h1Ref.style.transform = 'translateX(0)';\n        // h3Ref.style.transform = 'translateY(0)';\n        // pRef.style.transform = 'translateY(0)';\n        // }, [handleActiveLink])\n    }, [])\n\n    const handleClickOpen = () => {\n        setOpenDialog(true);\n    };\n\n    const handleClose = () => {\n        setOpenDialog(false);\n    };\n\n    const classes = useStyles();\n    return (\n        <div>\n            <HireMe open={openDialog} handleClose={handleClose} />\n            <main id=\"home__main\" className=\"home__main\">\n                <div className=\"home__main-clipart\"></div>\n                <div className=\"self-intro__container\">\n                    <div className=\"self-intro\">\n                        <div>\n                            <LightSpeed left>\n                                <h1 id=\"h1Ref\">Hey, I am Ankur Kaul</h1>\n                            </LightSpeed>\n                            <Fade top>\n                                <h3 id=\"h3Ref\">A Full stack developer <span><em>by choice </em> </span></h3>\n                            </Fade>\n                        </div>\n                        <div className=\"self-intro__image\">\n                            <Zoom>\n                                {/* <LazyLoad> */}\n                                <SmoothImage\n                                    src={`/assets/images/banner-img.jpg`}\n                                    alt=\"banner\"\n                                    transitionTime={1.0}\n                                />\n                                {/* <img */}\n                                {/* src={`/assets/images/banner-img-3.jpg`} */}\n                                {/* alt=\"banner\" /> */}\n                                {/* </LazyLoad> */}\n                            </Zoom>\n                        </div>\n                        {/* <Slide bottom> */}\n                        <p id=\"pRef\">I strongly <em>believe</em> we can build our future as we want it to be. So, other than my interest in learning new Technologies and building Web based applications for almost 2 years now, I also like to keep working on myself to be a more <em>positive</em> and <em>self motivated person</em>.</p>\n                        {/* </Slide> */}\n                        <div>\n                            <Button id=\"btn1\" className={classes.margin} variant=\"outlined\" size=\"medium\" color=\"primary\">\n                                {/* <strong><Link to=\"/contact\">Need a website?</Link></strong> */}\n                                <strong><Link to=\"Contact\">Need a website?</Link></strong>\n                            </Button>\n\n                            <Button id=\"btn2\" onClick={handleClickOpen} className={classes.margin} variant=\"outlined\" size=\"medium\" color=\"secondary\">\n                                <strong>Want to hire me?</strong>\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport default Home\n",
        "import Home from './Home'\n\nexport default Home",
        "import React, { useState, useEffect } from 'react'\nimport './ProjectCards.scss'\nimport Button from '@material-ui/core/Button'\nimport Bounce from 'react-reveal/Bounce';\n\nconst ProjectCards = ({ projects, type }) => {\n\n    const [filterProjects, setFilterProjects] = useState([])\n\n    useEffect(() => {\n        setFilterProjects(projects.filter(project =>\n            project.keyword.includes(type)\n        ))\n    }, [projects, type])\n\n    return (\n        <div className=\"project-cards\">\n            {filterProjects.map(project =>\n                <Bounce>\n                    <div id={`holder-${project.id}`} key={project.id} className=\"project-cards__holder\">\n                        <div className=\"project-cards__image-holder\">\n                            <img\n                                src={`/assets/images/${project.imgTitleDesktop}`}\n                                alt={`${project.imgTitleDesktop} logo`}\n                            />\n                        </div>\n                        <div id={`detail-holder-${project.id}`} className=\"project-cards__proj-details\">\n                            <div className=\"proj-details__title\">{project.title}</div>\n                            <div className=\"proj-details__desc\">{project.shortDesc}</div>\n                            <div className=\"proj-details__call-to-action\">\n                                <Button className=\"call-to-action-buttons\" variant=\"outlined\" size=\"small\" color=\"primary\">\n                                    <strong>\n                                        <a href={project.github} taget=\"_blank\">\n                                            Github</a>\n                                    </strong>\n                                </Button>\n                                {\n                                    project.website === \"\" ?\n                                        <Button className=\"call-to-action-buttons\" disabled variant=\"outlined\" size=\"small\">Website</Button>\n                                        : <Button className=\"call-to-action-buttons\" variant=\"outlined\" size=\"small\" color=\"secondary\">\n                                            <strong>\n                                                <a href={project.website} taget=\"_blank\" rel=\"noreferrer noopener\">Website</a>\n                                            </strong>\n                                        </Button>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </Bounce>\n            )\n            }\n        </div>\n    );\n}\n\nexport default ProjectCards\n",
        "import React, { useEffect } from 'react'\nimport './ProjectHeadings.scss'\n\nconst ProjectHeadings = ({ projChange }) => {\n\n    useEffect(() => {\n        const headingRef = document.getElementById('headingRef')\n        headingRef.style.transform = 'translateY(0)'\n    }, [])\n\n    const handleLiClick = e => {\n        const ul = [...[e.target.parentNode.childNodes]]\n        ul[0].forEach(li => {\n            // console.log(li)\n            li.classList.remove('background');\n            li.classList.add('background-negate')\n        })\n        e.target.classList.remove('background-negate')\n        e.target.classList.add('background')\n\n        projChange(e.target.textContent)\n    }\n    return (\n        <div id=\"headingRef\" className=\"project__language-headings\">\n            <ul>\n                <li className=\"back background\" onClick={handleLiClick}>All</li>\n                <li className=\"back\" onClick={handleLiClick}>React.js</li>\n                <li className=\"back\" onClick={handleLiClick}>Node.js</li>\n                <li className=\"back\" onClick={handleLiClick}>PHP</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default ProjectHeadings\n",
        "import Projects from './Projects'\n\nexport default Projects",
        "import React, { useState, useEffect } from 'react'\nimport './Projects.scss'\nimport ProjectCards from './ProjectCard/ProjectCards'\nimport { getProjects } from '../../services/api'\nimport BarLoader from 'react-spinners/BarLoader'\nimport ProjectHeadings from './ProjectHeading/ProjectHeadings'\n\n// const Project = ({ handleActiveLink }) => {\nconst Project = () => {\n\n    const [loading, setLoading] = useState(true)\n    const [projects, setProjects] = useState([])\n    const [handleProjectChange, setHandleProjectChange] = useState('all')\n\n    useEffect(() => {\n        // handleActiveLink(window.location.pathname)\n        const hrRef = document.getElementById('hrRef')\n        hrRef.style.transform = 'translateX(0)'\n\n        // }, [handleActiveLink])\n    }, [])\n\n    useEffect(() => {\n        setLoading(true)\n        getProjects()\n            .then(res => {\n                setProjects(res.data)\n                setLoading(false)\n            })\n            .catch(err => {\n                console.log(err.message)\n                setLoading(false)\n            })\n    }, [])\n\n    const handleProjChange = (input) => {\n        if (input.toLowerCase() === 'react.js') {\n            setHandleProjectChange('react')\n        }\n        else if (input.toLowerCase() === 'node.js') {\n            setHandleProjectChange('node')\n        }\n        else if (input.toLowerCase() === 'php') {\n            setHandleProjectChange('php')\n        }\n        else {\n            setHandleProjectChange('all')\n        }\n    }\n\n    return (\n        <div>\n            <main className=\"projects__main\">\n                <div className=\"projects\">\n                    <ProjectHeadings projChange={handleProjChange} />\n                    <hr id=\"hrRef\" width=\"30%\" />\n                    {loading ? <BarLoader /> : <ProjectCards projects={projects} type={handleProjectChange} />}\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport default Project\n",
        "import React, { useState, useEffect } from 'react'\nimport './Skills.scss'\nimport { getSkills } from '../../services/api'\nimport styled, { keyframes } from 'styled-components'\n\n// const Skills = ({ handleActiveLink }) => {\nconst Skills = () => {\n\n    const [skillsTypes, setSkillsType] = useState([])\n    const [loadAnimation, setLoadAnimation] = useState(false)\n\n    // useEffect(() => {\n    //     handleActiveLink(window.location.pathname)\n\n    // }, [handleActiveLink])\n\n    useEffect(() => {\n        getSkills()\n            .then(res => {\n                setSkillsType(res.data)\n                // console.log(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        // let progressContainer = ''\n        let boxParentHead = ''\n        const animateSkills = () => {\n            // progressContainer.forEach(child => {})\n            boxParentHead.forEach(children => {\n                let bounding = children.getBoundingClientRect()\n                console.log(bounding)\n                if (bounding.bottom <= 1000) {\n                    setLoadAnimation(true)\n                }\n            })\n            // setLoadAnimation(false)\n        }\n        setTimeout(() => {\n            // progressBar = document.getElementsByClassName(\"progress\")\n            // progressContainer = document.getElementsByClassName(\"box__parent-skills-progress-container\")\n            boxParentHead = document.getElementsByClassName(\"box__parent-head\")\n\n            // progressContainer = [...progressContainer]\n            boxParentHead = [...boxParentHead]\n            document.addEventListener('scroll', animateSkills)\n        }, 1000)\n\n        return () => {\n            document.removeEventListener('scroll', animateSkills)\n        }\n    }, [])\n\n    let count = 1.3;\n    const getWidth = width => {\n        const widthInc = keyframes`\n            0% {\n                width:0;\n            }\n\n            100%{\n                width:${width};\n            }`\n\n        const Div = styled.div`\n        text-align: right;\n        width: ${width};\n        height: 100%;\n        background: #3f51b5;\n        color: #fff;\n        border-top-right-radius: 15px;\n        border-bottom-right-radius: 15px;\n        animation: ${widthInc} ${count += 0.1}s ease-in-out 0s 1 normal;\n        `\n        const Span = styled.span`\n            padding-right:0.5rem;\n        `\n\n        return (\n            <Div id=\"progress\" className=\"box__parent-skills-progress-bar\">\n                <Span><strong>{width}</strong></Span>\n            </Div>\n        )\n    }\n\n\n    return (\n        <div>\n            <main className=\"skills__main\">\n                <div className=\"box__parent\">\n                    <h1>Skills</h1>\n                    <hr width=\"80px\" />\n                    {\n                        skillsTypes.map(types =>\n                            <div key={types.id} className=\"box__parent-head\">\n                                <h2>{types.skill_type}</h2>\n                                <div className=\"box__parent-skills\">\n                                    {\n                                        types.skills.map(skill =>\n                                            <div key={skill.id} className=\"box__parent-skills-container\">\n                                                <div className=\"box__parent-skills-heading\"><strong>{skill.skill_name}</strong></div>\n                                                <div className=\"box__parent-skills-progress-container\">\n                                                    {loadAnimation && getWidth(`${skill.skill_proficiency}0%`)}\n                                                </div>\n                                            </div>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport default React.memo(Skills)\n",
        "import Skills from './Skills'\n\nexport default Skills",
        "import Backdrop from './Backdrop';\n\nexport default Backdrop",
        "import React from 'react'\nimport './Backdrop.scss'\n\nconst Backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click}></div>\n);\n\nexport default Backdrop\n",
        "import Thankyou from './Thankyou'\n\nexport default Thankyou",
        "import React, { useEffect } from 'react'\nimport './Thankyou.scss'\nimport Button from '@material-ui/core/Button'\n\nconst Thankyou = ({ handleThankyou }) => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            const thankyouHolder = document.getElementById('thankyou__holder');\n            thankyouHolder.style.transform = 'scale(1)'\n        }, 100)\n    }, [])\n\n    return (\n        <div id=\"thankyou__holder\" className=\"thankyou__holder\">\n            <h1>Message sent..!!</h1>\n            <h2>Thank you for contacting me. I'll get back to you as soon as I can.</h2>\n            <Button onClick={handleThankyou} variant=\"outlined\" color=\"primary\">\n                <strong>Send again?</strong>\n            </Button>\n        </div>\n    )\n}\n\nexport default Thankyou\n",
        "import React, { useEffect } from 'react'\nimport './Form.scss'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Zoom from 'react-reveal/Zoom'\n\nconst useStyles = makeStyles(theme => ({\n    margin: {\n        margin: theme.spacing(1),\n    }\n}))\n\nconst Form = ({ handleChange, submitForm }) => {\n\n    const classes = useStyles()\n    useEffect(() => {\n        const contactDetails = document.getElementById('contact-details');\n        contactDetails.style.transform = 'scale(1)'\n    }, [])\n\n    return (\n        <div id=\"contact-details\" className=\"contact-details\">\n            <Zoom>\n                <form>\n                    <h1>Get in touch with me</h1>\n                    <div>\n                        {/* <TextField inputProps={{ autoFocus: true }} className=\"contact-details__fields\" id=\"standard-basic\" label=\"Name*\" onChange={handleChange('name')} /> */}\n                        <TextField inputProps={{ autoFocus: false }} className=\"contact-details__fields\" id=\"standard-basic\" label=\"Name*\" onChange={handleChange('name')} />\n                        <TextField className=\"contact-details__fields\" id=\"standard-basic\" label=\"Company\" onChange={handleChange('company')} />\n                        <TextField className=\"contact-details__fields\" id=\"standard-basic\" label=\"Email*\" onChange={handleChange('email')} />\n                        <TextField className=\"contact-details__fields\" id=\"standard-basic\" label=\"Contact Number\" onChange={handleChange('contactNumber')} />\n                        <TextField className=\"contact-details__fields\" multiline rows={2} id=\"standard-basic\" label=\"Message*\" onChange={handleChange('message')} />\n                    </div>\n                    <div>\n                        <Button onClick={submitForm} className={`send-message ${classes.margin}`} variant=\"outlined\" color=\"primary\">\n                            <strong>Send</strong>\n                        </Button>\n                    </div>\n                </form>\n            </Zoom>\n        </div>\n    )\n}\n\nexport default Form\n",
        "import Form from './Form'\n\nexport default Form",
        "import Contact from './Contact'\n\nexport default Contact",
        "import React, { useState } from 'react'\nimport './Contact.scss'\nimport { AiOutlineMail } from 'react-icons/ai'\nimport { RiLinkedinBoxLine } from 'react-icons/ri'\nimport { GoMarkGithub } from 'react-icons/go'\nimport { sendEmail } from '../../services/api'\nimport Backdrop from '../Backdrop'\nimport validator from 'email-validator'\nimport Thankyou from '../Thankyou';\nimport Form from '../Form';\n\n// const Contact = ({ handleActiveLink }) => {\nconst Contact = () => {\n\n    // useEffect(() => {\n    // handleActiveLink(window.location.pathname)\n    // }, [handleActiveLink])\n\n    const [isLoading, setIsLoading] = useState(false)\n    const [showThankyou, setShowThankyou] = useState(false)\n    const [state, setState] = useState({\n        name: '',\n        company: '',\n        email: '',\n        contactNumber: '',\n        message: '',\n    })\n\n    const handleChange = input => e => {\n        setState({\n            ...state,\n            [input]: e.target.value\n        })\n    }\n\n    const submitForm = e => {\n\n        //api call to node\n        e.preventDefault()\n        const validatedEmail = validator.validate(state.email)\n        if (state.name === '' || state.email === '' || state.message === '') {\n            alert('Fields marked with * cannot be left blank')\n        } else if (!validatedEmail) {\n            alert('Email entered is not valid')\n        } else {\n            setIsLoading(true)\n            sendEmail(state)\n                .then(res => {\n                    if (res.status === 200) {\n                        setShowThankyou(true)\n                        setIsLoading(false)\n                    } else {\n                        alert(\"Something went wrong..!! Please try again in sometime\")\n                        setShowThankyou(false)\n                        setIsLoading(false)\n                    }\n                })\n                .catch(err => {\n                    alert(\"Something went wrong..!! Please try again in sometime\")\n                    setShowThankyou(false)\n                    setIsLoading(false)\n                })\n        }\n    }\n\n    const handleThankyou = () => {\n        setShowThankyou(false)\n    }\n\n    let email = 'ankurkaul1894@gmail.com'\n    let linkedin = 'https://linkedin.com/in/ankurkaul1894'\n    let github = 'https://github.com/Akaul18'\n    return (\n        <div>\n            {isLoading && <Backdrop />}\n            <main className=\"contact__main\">\n                <div className=\"my-contact-card\">\n                    <div className=\"clipart\"></div>\n                    <div>\n                        <h2>ANKUR <span>KAUL</span></h2>\n                        <h3><span>Full -</span> stack developer</h3>\n                        <ul>\n                            <li><a href={`mailto:${email}`} taget=\"_blank\" rel='noreferrer noopener'><span><AiOutlineMail /></span> <strong>ankurkaul1894@gmail.com</strong></a></li>\n                            <li><a href={linkedin} target=\"_blank\" rel='noreferrer noopener'><span><RiLinkedinBoxLine /></span><strong> www.linkedin.com/in/ankurkaul1894</strong></a></li>\n                            <li><a href={github} target=\"_blank\" rel='noreferrer noopener'><span><GoMarkGithub /></span><strong> www.github.com/Akaul18</strong></a></li>\n                        </ul>\n                    </div>\n                </div>\n\n\n                {!showThankyou ?\n                    <Form handleChange={handleChange} submitForm={submitForm} />\n                    : <Thankyou handleThankyou={handleThankyou} />\n                }\n            </main>\n        </div>\n    )\n}\n\nexport default Contact\n",
        "import React, { useState } from 'react';\nimport './App.scss';\n// import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Element } from 'react-scroll'\nimport Header from './components/Header';\nimport Home from './components/Home'\nimport Projects from './components/Projects'\nimport Skills from './components/Skills'\nimport Contact from './components/Contact'\nimport { SideDrawer } from './components/SideDrawer';\nimport Backdrop from './components/Backdrop';\n// import Blog from './components/Blog';\n\nfunction App() {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [crossPressed, setCrossPressed] = useState(false);\n  // const [currentURLPath, setCurrentURLPath] = useState('')\n\n  const drawerToggleHandler = () => {\n    setDrawerOpen(prev => !prev)\n    setCrossPressed(true)\n  }\n\n  const crossButtonHandler = () => {\n    setCrossPressed(true)\n    setDrawerOpen(prev => !prev)\n  }\n\n  const backdropClickHandler = () => {\n    setDrawerOpen(false)\n    setCrossPressed(true)\n  }\n\n  // const handleActiveLink = path => {\n  //   setCurrentURLPath(path)\n  // }\n\n  let backdrop\n  if (drawerOpen && crossPressed) {\n    backdrop = <Backdrop click={backdropClickHandler} />\n  }\n\n  return (\n    // <BrowserRouter>\n    <div style={{ height: \"100%\" }}>\n      {/* <Header drawerToggleHandler={drawerToggleHandler} currentURLPath={currentURLPath} /> */}\n      <Header drawerToggleHandler={drawerToggleHandler} />\n      <SideDrawer showDrawer={drawerOpen} closeDrawer={crossButtonHandler} />\n      {backdrop}\n      {/* <Switch>\n          <Route path=\"/\" exact render={() => <Home handleActiveLink={handleActiveLink} />} />\n          <Route path=\"/skills\" render={() => <Skills handleActiveLink={handleActiveLink} />} />\n          <Route path=\"/projects\" render={() => <Projects handleActiveLink={handleActiveLink} />} />\n          <Route path=\"/blog\" render={() => <Blog handleActiveLink={handleActiveLink} />} />\n          <Route path=\"/contact\" render={() => <Contact handleActiveLink={handleActiveLink} />} />\n        </Switch> */}\n      <Element id=\"Home\">\n        {/* <Home handleActiveLink={handleActiveLink} /> */}\n        <Home />\n      </Element>\n      <Element id=\"Skills\">\n        {/* <Skills handleActiveLink={handleActiveLink} /> */}\n        <Skills />\n      </Element>\n      <Element id=\"Projects\">\n        {/* <Projects handleActiveLink={handleActiveLink} /> */}\n        <Projects />\n      </Element>\n      {/* <Blog handleActiveLink={handleActiveLink} /> */}\n      <Element id=\"Contact\">\n        {/* <Contact handleActiveLink={handleActiveLink} /> */}\n        <Contact />\n      </Element>\n    </div>\n    // </BrowserRouter>\n  );\n}\n\nexport default App;\n",
        "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",
        "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
    ],
    "sourceRoot": ""
}